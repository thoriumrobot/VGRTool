plugins {
	id 'java'
	id 'application'
	id("com.diffplug.spotless") version "7.0.4"
}

group = 'com.example'
version = '1.0'

repositories {
	mavenCentral()
}

dependencies {
	// Eclipse JDT Core
	implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.30.0'

	// Eclipse Text
	implementation 'org.eclipse.platform:org.eclipse.text:3.12.0'

	// Eclipse JFace Text
	implementation 'org.eclipse.platform:org.eclipse.jface.text:3.16.400'

	// Checker Framework Annotations
	implementation 'org.checkerframework:checker-qual:3.21.0'
	implementation 'org.checkerframework:checker:3.21.0'
	annotationProcessor 'org.checkerframework:checker:3.21.0'

	// Apache Commons
	implementation 'commons-io:commons-io:2.16.1'

	// javax.annotation API (for @Nullable)
	implementation 'javax.annotation:javax.annotation-api:1.3.2'

	// JUnit for testing (optional)
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


spotless {

format 'misc', {
	// define the files to apply `misc` to
	target '*.gradle', '.gitattributes', '.gitignore'

	// define the steps to apply to those files
	trimTrailingWhitespace()
	leadingSpacesToTabs()
	endWithNewline()
}
java {
	removeUnusedImports()
	cleanthat()
	eclipse()
	formatAnnotations()
}
}

tasks.named('build') {
	dependsOn 'spotlessJavaCheck'
	tasks.findByName('spotlessJavaCheck').mustRunAfter 'compileJava'
}

tasks.named('test') {
	dependsOn 'spotlessCheck'

	useJUnitPlatform()

	maxHeapSize = '1G'

	testLogging {
		events "passed"
	}
}

application {
	mainClassName = 'VGRTool'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.compilerArgs += [
		'-Xlint:unchecked',
		'-Xlint:deprecation'
	]
}

tasks.named('test', Test) {
	useJUnitPlatform()

	maxHeapSize = '1G'

	testLogging {
		events "passed"
	}
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.eclipse.platform' &&
			details.requested.name == 'org.eclipse.swt.${osgi.platform}') {
			details.useTarget group: 'org.eclipse.platform', name: 'org.eclipse.swt.gtk.linux.x86_64', version: details.requested.version
		}
	}
}
