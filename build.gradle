plugins {
    id 'java'
    id 'application'
    id 'com.diffplug.spotless' version '6.21.0'
}

group 'com.example'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    // Eclipse JDT Core
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.32.0'

    // Eclipse Text
    implementation 'org.eclipse.platform:org.eclipse.text:3.12.0'

    // Eclipse JFace Text
    implementation 'org.eclipse.platform:org.eclipse.jface.text:3.16.400'

    // Checker Framework Annotations
    implementation 'org.checkerframework:checker:3.48.1'
    implementation 'org.checkerframework:checker-qual:3.48.1'
    annotationProcessor 'org.checkerframework:checker:3.48.1'

    // javax.annotation API (for @Nullable)
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // JUnit for testing (optional)
    testImplementation 'junit:junit:4.13.2'
}

application {
    mainClassName = 'VGRTool'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
        '-Xlint:unchecked',
        '-Xlint:deprecation'
    ]
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.eclipse.platform' &&
            details.requested.name == 'org.eclipse.swt.${osgi.platform}') {
            details.useTarget group: 'org.eclipse.platform', name: 'org.eclipse.swt.gtk.linux.x86_64', version: details.requested.version
        }
    }
}

spotless {
    java {
        target 'src/**/*.java'  // Specify which files to format
        googleJavaFormat('1.15.0')  // Use Google's Java code style

        // You can also add optional format rules
        removeUnusedImports()
        indentWithSpaces(4)  // Indentation with spaces
        trimTrailingWhitespace()
        endWithNewline()
    }
}

